#include <iostream>

using namespace std;

const bool  DEBUG   = false;
const int   SIZE    = 150000;

int main(){
    
    int n = 13;

    string thousandDigit;
    thousandDigit += "73167176531330624919225119674426574742355349194934";
    thousandDigit += "96983520312774506326239578318016984801869478851843";
    thousandDigit += "85861560789112949495459501737958331952853208805511";
    thousandDigit += "12540698747158523863050715693290963295227443043557";
    thousandDigit += "66896648950445244523161731856403098711121722383113";

    thousandDigit += "62229893423380308135336276614282806444486645238749";
    thousandDigit += "30358907296290491560440772390713810515859307960866";
    thousandDigit += "70172427121883998797908792274921901699720888093776";
    thousandDigit += "65727333001053367881220235421809751254540594752243";
    thousandDigit += "52584907711670556013604839586446706324415722155397";

    thousandDigit += "53697817977846174064955149290862569321978468622482";
    thousandDigit += "83972241375657056057490261407972968652414535100474";
    thousandDigit += "82166370484403199890008895243450658541227588666881";
    thousandDigit += "16427171479924442928230863465674813919123162824586";
    thousandDigit += "17866458359124566529476545682848912883142607690042";

    thousandDigit += "24219022671055626321111109370544217506941658960408";
    thousandDigit += "07198403850962455444362981230987879927244284909188";
    thousandDigit += "84580156166097919133875499200524063689912560717606";
    thousandDigit += "05886116467109405077541002256983155200055935729725";
    thousandDigit += "71636269561882670428252483600823257530420752963450";

    long max = 0;
    int max_i;

    for(unsigned int i=0; i<thousandDigit.size(); i++){
        long cur = 1;
        for(int j=0; j<13; j++){
            cur = cur * (int(thousandDigit[i+j])-48);
        }
        if(cur > max){
            max = cur;
            max_i = i;
        }
    }

    cout << "Startindex = " << max_i << endl;
    for(int i = max_i; i<max_i+n; i++){
        cout << int(thousandDigit[i]) - 48 << " ";
    }
    cout << endl;

    cout << "Das groesste adjazente Produkt der Laenge " << n << " ist " << max << "." << endl;
 
    return 0;
}